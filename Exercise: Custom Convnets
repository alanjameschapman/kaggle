{"metadata":{"jupytext":{"formats":"md,ipynb"},"kernelspec":{"display_name":"Python 3","language":"python","name":"python3"},"language_info":{"name":"python","version":"3.10.13","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"gpu","dataSources":[{"sourceId":1338830,"sourceType":"datasetVersion","datasetId":708136},{"sourceId":1363948,"sourceType":"datasetVersion","datasetId":701538},{"sourceId":1495782,"sourceType":"datasetVersion","datasetId":878523}],"dockerImageVersionId":30648,"isInternetEnabled":false,"language":"python","sourceType":"notebook","isGpuEnabled":true}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"markdown","source":"**This notebook is an exercise in the [Computer Vision](https://www.kaggle.com/learn/computer-vision) course.  You can reference the tutorial at [this link](https://www.kaggle.com/ryanholbrook/custom-convnets).**\n\n---\n","metadata":{}},{"cell_type":"markdown","source":"# Introduction #\n\nIn these exercises, you'll build a custom convnet with performance competitive to the VGG16 model from Lesson 1.\n\nGet started by running the code cell below.","metadata":{}},{"cell_type":"code","source":"# Setup feedback system\nfrom learntools.core import binder\nbinder.bind(globals())\nfrom learntools.computer_vision.ex5 import *\n\n# Imports\nimport os, warnings\nimport matplotlib.pyplot as plt\nfrom matplotlib import gridspec\n\nimport numpy as np\nimport tensorflow as tf\nfrom tensorflow.keras.preprocessing import image_dataset_from_directory\n\n# Reproducability\ndef set_seed(seed=31415):\n    np.random.seed(seed)\n    tf.random.set_seed(seed)\n    os.environ['PYTHONHASHSEED'] = str(seed)\n    os.environ['TF_DETERMINISTIC_OPS'] = '1'\nset_seed()\n\n# Set Matplotlib defaults\nplt.rc('figure', autolayout=True)\nplt.rc('axes', labelweight='bold', labelsize='large',\n       titleweight='bold', titlesize=18, titlepad=10)\nplt.rc('image', cmap='magma')\nwarnings.filterwarnings(\"ignore\") # to clean up output cells\n\n\n# Load training and validation sets\nds_train_ = image_dataset_from_directory(\n    '../input/car-or-truck/train',\n    labels='inferred',\n    label_mode='binary',\n    image_size=[128, 128],\n    interpolation='nearest',\n    batch_size=64,\n    shuffle=True,\n)\nds_valid_ = image_dataset_from_directory(\n    '../input/car-or-truck/valid',\n    labels='inferred',\n    label_mode='binary',\n    image_size=[128, 128],\n    interpolation='nearest',\n    batch_size=64,\n    shuffle=False,\n)\n\n# Data Pipeline\ndef convert_to_float(image, label):\n    image = tf.image.convert_image_dtype(image, dtype=tf.float32)\n    return image, label\n\nAUTOTUNE = tf.data.experimental.AUTOTUNE\nds_train = (\n    ds_train_\n    .map(convert_to_float)\n    .cache()\n    .prefetch(buffer_size=AUTOTUNE)\n)\nds_valid = (\n    ds_valid_\n    .map(convert_to_float)\n    .cache()\n    .prefetch(buffer_size=AUTOTUNE)\n)\n","metadata":{"execution":{"iopub.status.busy":"2024-06-06T14:25:09.959091Z","iopub.execute_input":"2024-06-06T14:25:09.959498Z","iopub.status.idle":"2024-06-06T14:25:15.571185Z","shell.execute_reply.started":"2024-06-06T14:25:09.959467Z","shell.execute_reply":"2024-06-06T14:25:15.569497Z"},"trusted":true},"execution_count":3,"outputs":[{"name":"stdout","text":"Found 5117 files belonging to 2 classes.\nFound 5051 files belonging to 2 classes.\n","output_type":"stream"}]},{"cell_type":"markdown","source":"# Design a Convnet #\n\nLet's design a convolutional network with a block architecture like we saw in the tutorial. The model from the example had three blocks, each with a single convolutional layer. Its performance on the \"Car or Truck\" problem was okay, but far from what the pretrained VGG16 could achieve. It might be that our simple network lacks the ability to extract sufficiently complex features. We could try improving the model either by adding more blocks or by adding convolutions to the blocks we have.\n\nLet's go with the second approach. We'll keep the three block structure, but increase the number of `Conv2D` layer in the second block to two, and in the third block to three.\n\n<figure>\n<!-- <img src=\"./images/2-convmodel-2.png\" width=\"250\" alt=\"Diagram of a convolutional model.\"> -->\n<img src=\"https://storage.googleapis.com/kaggle-media/learn/images/Vko6nCK.png\" width=\"250\" alt=\"Diagram of a convolutional model.\">\n</figure>\n\n# 1) Define Model #\n\nGiven the diagram above, complete the model by defining the layers of the third block.","metadata":{}},{"cell_type":"code","source":"from tensorflow import keras\nfrom tensorflow.keras import layers\n\nmodel = keras.Sequential([\n    # Block One\n    layers.Conv2D(filters=32, kernel_size=3, activation='relu', padding='same',\n                  input_shape=[128, 128, 3]),\n    layers.MaxPool2D(),\n\n    # Block Two\n    layers.Conv2D(filters=64, kernel_size=3, activation='relu', padding='same'),\n    layers.MaxPool2D(),\n\n    # Block Three\n    layers.Conv2D(filters=128, kernel_size=3, activation='relu', padding='same'),\n    layers.Conv2D(filters=128, kernel_size=3, activation='relu', padding='same'),\n    layers.MaxPool2D(),\n\n    # Head\n    layers.Flatten(),\n    layers.Dense(6, activation='relu'),\n    layers.Dropout(0.2),\n    layers.Dense(1, activation='sigmoid'),\n])\n\n# Check your answer\nq_1.check()","metadata":{"lines_to_next_cell":0,"execution":{"iopub.status.busy":"2024-06-06T14:25:33.796896Z","iopub.execute_input":"2024-06-06T14:25:33.797480Z","iopub.status.idle":"2024-06-06T14:25:34.059417Z","shell.execute_reply.started":"2024-06-06T14:25:33.797436Z","shell.execute_reply":"2024-06-06T14:25:34.056623Z"},"trusted":true},"execution_count":4,"outputs":[{"output_type":"display_data","data":{"text/plain":"<IPython.core.display.Javascript object>","application/javascript":"parent.postMessage({\"jupyterEvent\": \"custom.exercise_interaction\", \"data\": {\"outcomeType\": 1, \"valueTowardsCompletion\": 0.3333333333333333, \"interactionType\": 1, \"questionType\": 2, \"questionId\": \"1_Q1\", \"learnToolsVersion\": \"0.3.4\", \"failureMessage\": \"\", \"exceptionClass\": \"\", \"trace\": \"\"}}, \"*\")"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"Correct","text/markdown":"<span style=\"color:#33cc33\">Correct</span>"},"metadata":{}}]},{"cell_type":"code","source":"# Lines below will give you a hint or solution code\n#q_1.hint()\n#q_1.solution()","metadata":{},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"# 2) Compile #\n\nTo prepare for training, compile the model with an appropriate loss and accuracy metric for the \"Car or Truck\" dataset.","metadata":{}},{"cell_type":"code","source":"model.compile(\n    optimizer=tf.keras.optimizers.Adam(epsilon=0.01),\n    loss = 'binary_crossentropy',\n    metrics = ['binary_accuracy']\n)\n\n# Check your answer\nq_2.check()","metadata":{"lines_to_next_cell":0,"execution":{"iopub.status.busy":"2024-06-06T14:25:38.185666Z","iopub.execute_input":"2024-06-06T14:25:38.186229Z","iopub.status.idle":"2024-06-06T14:25:38.229576Z","shell.execute_reply.started":"2024-06-06T14:25:38.186189Z","shell.execute_reply":"2024-06-06T14:25:38.227510Z"},"trusted":true},"execution_count":5,"outputs":[{"output_type":"display_data","data":{"text/plain":"<IPython.core.display.Javascript object>","application/javascript":"parent.postMessage({\"jupyterEvent\": \"custom.exercise_interaction\", \"data\": {\"outcomeType\": 1, \"valueTowardsCompletion\": 0.3333333333333333, \"interactionType\": 1, \"questionType\": 2, \"questionId\": \"2_Q2\", \"learnToolsVersion\": \"0.3.4\", \"failureMessage\": \"\", \"exceptionClass\": \"\", \"trace\": \"\"}}, \"*\")"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"Correct","text/markdown":"<span style=\"color:#33cc33\">Correct</span>"},"metadata":{}}]},{"cell_type":"code","source":"model.compile(\n    optimizer=tf.keras.optimizers.Adam(epsilon=0.01),\n    loss='binary_crossentropy',\n    metrics=['binary_accuracy'],\n)\nq_2.assert_check_passed()","metadata":{"lines_to_next_cell":0,"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# Lines below will give you a hint or solution code\nq_2.hint()\nq_2.solution()","metadata":{"lines_to_next_cell":0,"execution":{"iopub.status.busy":"2024-06-05T14:00:06.674460Z","iopub.execute_input":"2024-06-05T14:00:06.675864Z","iopub.status.idle":"2024-06-05T14:00:06.689942Z","shell.execute_reply.started":"2024-06-05T14:00:06.675804Z","shell.execute_reply":"2024-06-05T14:00:06.688755Z"},"trusted":true},"execution_count":8,"outputs":[{"output_type":"display_data","data":{"text/plain":"<IPython.core.display.Javascript object>","application/javascript":"parent.postMessage({\"jupyterEvent\": \"custom.exercise_interaction\", \"data\": {\"interactionType\": 2, \"questionType\": 2, \"questionId\": \"2_Q2\", \"learnToolsVersion\": \"0.3.4\", \"valueTowardsCompletion\": 0.0, \"failureMessage\": \"\", \"exceptionClass\": \"\", \"trace\": \"\", \"outcomeType\": 4}}, \"*\")"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"Hint: This is a *binary* classification problem.","text/markdown":"<span style=\"color:#3366cc\">Hint:</span> This is a *binary* classification problem."},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"<IPython.core.display.Javascript object>","application/javascript":"parent.postMessage({\"jupyterEvent\": \"custom.exercise_interaction\", \"data\": {\"interactionType\": 3, \"questionType\": 2, \"questionId\": \"2_Q2\", \"learnToolsVersion\": \"0.3.4\", \"valueTowardsCompletion\": 0.0, \"failureMessage\": \"\", \"exceptionClass\": \"\", \"trace\": \"\", \"outcomeType\": 4}}, \"*\")"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"Solution: \n```python\n\nmodel.compile(\n    optimizer=tf.keras.optimizers.Adam(learning_rate=0.0001),\n    loss='binary_crossentropy',\n    metrics=['binary_accuracy'],\n)\n\n```","text/markdown":"<span style=\"color:#33cc99\">Solution:</span> \n```python\n\nmodel.compile(\n    optimizer=tf.keras.optimizers.Adam(learning_rate=0.0001),\n    loss='binary_crossentropy',\n    metrics=['binary_accuracy'],\n)\n\n```"},"metadata":{}}]},{"cell_type":"markdown","source":"Finally, let's test the performance of this new model. First run this cell to fit the model to the training set.","metadata":{}},{"cell_type":"code","source":"history = model.fit(\n    ds_train,\n    validation_data=ds_valid,\n    epochs=50,\n)","metadata":{"execution":{"iopub.status.busy":"2024-06-06T14:25:44.697721Z","iopub.execute_input":"2024-06-06T14:25:44.698244Z","iopub.status.idle":"2024-06-06T17:12:13.938045Z","shell.execute_reply.started":"2024-06-06T14:25:44.698206Z","shell.execute_reply":"2024-06-06T17:12:13.936922Z"},"trusted":true},"execution_count":6,"outputs":[{"name":"stdout","text":"Epoch 1/50\n80/80 [==============================] - 240s 3s/step - loss: 0.6808 - binary_accuracy: 0.5736 - val_loss: 0.6692 - val_binary_accuracy: 0.5787\nEpoch 2/50\n80/80 [==============================] - 198s 2s/step - loss: 0.6629 - binary_accuracy: 0.5951 - val_loss: 0.6520 - val_binary_accuracy: 0.6034\nEpoch 3/50\n80/80 [==============================] - 198s 2s/step - loss: 0.6528 - binary_accuracy: 0.6099 - val_loss: 0.6420 - val_binary_accuracy: 0.6201\nEpoch 4/50\n80/80 [==============================] - 196s 2s/step - loss: 0.6424 - binary_accuracy: 0.6252 - val_loss: 0.6385 - val_binary_accuracy: 0.6246\nEpoch 5/50\n80/80 [==============================] - 194s 2s/step - loss: 0.6367 - binary_accuracy: 0.6363 - val_loss: 0.6310 - val_binary_accuracy: 0.6302\nEpoch 6/50\n80/80 [==============================] - 190s 2s/step - loss: 0.6285 - binary_accuracy: 0.6482 - val_loss: 0.6241 - val_binary_accuracy: 0.6440\nEpoch 7/50\n80/80 [==============================] - 230s 3s/step - loss: 0.6178 - binary_accuracy: 0.6568 - val_loss: 0.6189 - val_binary_accuracy: 0.6533\nEpoch 8/50\n80/80 [==============================] - 233s 3s/step - loss: 0.6084 - binary_accuracy: 0.6699 - val_loss: 0.5906 - val_binary_accuracy: 0.6870\nEpoch 9/50\n80/80 [==============================] - 236s 3s/step - loss: 0.5940 - binary_accuracy: 0.6945 - val_loss: 0.5819 - val_binary_accuracy: 0.7001\nEpoch 10/50\n80/80 [==============================] - 201s 3s/step - loss: 0.5784 - binary_accuracy: 0.7012 - val_loss: 0.5825 - val_binary_accuracy: 0.6933\nEpoch 11/50\n80/80 [==============================] - 193s 2s/step - loss: 0.5672 - binary_accuracy: 0.7147 - val_loss: 0.5667 - val_binary_accuracy: 0.7108\nEpoch 12/50\n80/80 [==============================] - 190s 2s/step - loss: 0.5486 - binary_accuracy: 0.7329 - val_loss: 0.5456 - val_binary_accuracy: 0.7236\nEpoch 13/50\n80/80 [==============================] - 192s 2s/step - loss: 0.5301 - binary_accuracy: 0.7413 - val_loss: 0.5284 - val_binary_accuracy: 0.7494\nEpoch 14/50\n80/80 [==============================] - 200s 3s/step - loss: 0.5093 - binary_accuracy: 0.7583 - val_loss: 0.5150 - val_binary_accuracy: 0.7511\nEpoch 15/50\n80/80 [==============================] - 194s 2s/step - loss: 0.4826 - binary_accuracy: 0.7827 - val_loss: 0.4892 - val_binary_accuracy: 0.7664\nEpoch 16/50\n80/80 [==============================] - 201s 3s/step - loss: 0.4560 - binary_accuracy: 0.7930 - val_loss: 0.4705 - val_binary_accuracy: 0.7860\nEpoch 17/50\n80/80 [==============================] - 199s 2s/step - loss: 0.4271 - binary_accuracy: 0.8106 - val_loss: 0.4571 - val_binary_accuracy: 0.7951\nEpoch 18/50\n80/80 [==============================] - 197s 2s/step - loss: 0.4016 - binary_accuracy: 0.8181 - val_loss: 0.4719 - val_binary_accuracy: 0.7874\nEpoch 19/50\n80/80 [==============================] - 200s 3s/step - loss: 0.3781 - binary_accuracy: 0.8409 - val_loss: 0.4619 - val_binary_accuracy: 0.8018\nEpoch 20/50\n80/80 [==============================] - 195s 2s/step - loss: 0.3497 - binary_accuracy: 0.8519 - val_loss: 0.4957 - val_binary_accuracy: 0.7923\nEpoch 21/50\n80/80 [==============================] - 196s 2s/step - loss: 0.3273 - binary_accuracy: 0.8564 - val_loss: 0.4897 - val_binary_accuracy: 0.8018\nEpoch 22/50\n80/80 [==============================] - 194s 2s/step - loss: 0.3039 - binary_accuracy: 0.8718 - val_loss: 0.4226 - val_binary_accuracy: 0.8147\nEpoch 23/50\n80/80 [==============================] - 191s 2s/step - loss: 0.3004 - binary_accuracy: 0.8685 - val_loss: 0.4215 - val_binary_accuracy: 0.8276\nEpoch 24/50\n80/80 [==============================] - 192s 2s/step - loss: 0.2594 - binary_accuracy: 0.8906 - val_loss: 0.4193 - val_binary_accuracy: 0.8270\nEpoch 25/50\n80/80 [==============================] - 193s 2s/step - loss: 0.2510 - binary_accuracy: 0.8925 - val_loss: 0.4132 - val_binary_accuracy: 0.8208\nEpoch 26/50\n80/80 [==============================] - 195s 2s/step - loss: 0.2431 - binary_accuracy: 0.8945 - val_loss: 0.5402 - val_binary_accuracy: 0.7674\nEpoch 27/50\n80/80 [==============================] - 191s 2s/step - loss: 0.2297 - binary_accuracy: 0.9023 - val_loss: 0.4313 - val_binary_accuracy: 0.8266\nEpoch 28/50\n80/80 [==============================] - 193s 2s/step - loss: 0.2109 - binary_accuracy: 0.9089 - val_loss: 0.4473 - val_binary_accuracy: 0.8319\nEpoch 29/50\n80/80 [==============================] - 232s 3s/step - loss: 0.1888 - binary_accuracy: 0.9185 - val_loss: 0.4454 - val_binary_accuracy: 0.8345\nEpoch 30/50\n80/80 [==============================] - 188s 2s/step - loss: 0.0939 - binary_accuracy: 0.9597 - val_loss: 0.7451 - val_binary_accuracy: 0.8260\nEpoch 38/50\n80/80 [==============================] - 193s 2s/step - loss: 0.0982 - binary_accuracy: 0.9556 - val_loss: 0.6860 - val_binary_accuracy: 0.8373\nEpoch 39/50\n80/80 [==============================] - 191s 2s/step - loss: 0.0847 - binary_accuracy: 0.9635 - val_loss: 0.7384 - val_binary_accuracy: 0.8335\nEpoch 40/50\n80/80 [==============================] - 189s 2s/step - loss: 0.0834 - binary_accuracy: 0.9652 - val_loss: 0.5656 - val_binary_accuracy: 0.8355\nEpoch 43/50\n80/80 [==============================] - 229s 3s/step - loss: 0.1021 - binary_accuracy: 0.9566 - val_loss: 0.5138 - val_binary_accuracy: 0.8359\nEpoch 44/50\n80/80 [==============================] - 195s 2s/step - loss: 0.1045 - binary_accuracy: 0.9535 - val_loss: 0.5216 - val_binary_accuracy: 0.8418\nEpoch 45/50\n80/80 [==============================] - 196s 2s/step - loss: 0.0824 - binary_accuracy: 0.9625 - val_loss: 0.6235 - val_binary_accuracy: 0.8309\nEpoch 46/50\n80/80 [==============================] - 196s 2s/step - loss: 0.0926 - binary_accuracy: 0.9601 - val_loss: 0.6554 - val_binary_accuracy: 0.8066\nEpoch 47/50\n80/80 [==============================] - 205s 3s/step - loss: 0.0755 - binary_accuracy: 0.9662 - val_loss: 0.6436 - val_binary_accuracy: 0.8365\nEpoch 48/50\n80/80 [==============================] - 212s 3s/step - loss: 0.0529 - binary_accuracy: 0.9767 - val_loss: 0.5966 - val_binary_accuracy: 0.8588\nEpoch 49/50\n80/80 [==============================] - 186s 2s/step - loss: 0.0428 - binary_accuracy: 0.9787 - val_loss: 0.6675 - val_binary_accuracy: 0.8578\nEpoch 50/50\n80/80 [==============================] - 186s 2s/step - loss: 0.0304 - binary_accuracy: 0.9857 - val_loss: 0.7041 - val_binary_accuracy: 0.8582\n","output_type":"stream"}]},{"cell_type":"markdown","source":"And now run the cell below to plot the loss and metric curves for this training run.","metadata":{}},{"cell_type":"code","source":"import pandas as pd\nhistory_frame = pd.DataFrame(history.history)\nhistory_frame.loc[:, ['loss', 'val_loss']].plot()\nhistory_frame.loc[:, ['binary_accuracy', 'val_binary_accuracy']].plot();","metadata":{"execution":{"iopub.status.busy":"2024-06-06T17:23:57.873438Z","iopub.execute_input":"2024-06-06T17:23:57.874517Z","iopub.status.idle":"2024-06-06T17:23:58.769032Z","shell.execute_reply.started":"2024-06-06T17:23:57.874481Z","shell.execute_reply":"2024-06-06T17:23:58.767650Z"},"trusted":true},"execution_count":7,"outputs":[{"output_type":"display_data","data":{"text/plain":"<Figure size 640x480 with 1 Axes>","image/png":""},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"<Figure size 640x480 with 1 Axes>","image/png":"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y5Yto2fPnvz555+sXbuWnTt3UrduXYA8z/v222/TunVrJk+enLutUaNGV7zuv917770MHTo0z7YrvR///e9/+b//+z9Gjx6de9zZ96BDhw7Uq1ePL774gqeffhow35e+ffvi5eVV4PpERKRsORyfwos/bOfWRkHc266a1eXk0q1YC7Vv3z5Pyg8PD2fv3r2XbK1q2rRp7mNPT098fHw4ceJE7rZJkybRqlUr/P398fLy4pNPPskzWTRAkyZNLpjM+cEHH+Trr78mPT2dzMxMvvrqK4YNG5av1xATE8ODDz5InTp18PX1xcfHh+Tk5NzrRkREULVq1dxQ929nW+yuVevWrS/Ydrn348SJExw/fvyy1x4+fDgzZswAzNf522+/5ft9ERGRsikjO4cPFu/l5gnLWb4nlgl/7iEju+RMFF/mWuzcnR3Z8VrhrGpxNdcuSv9eNspms2G32wGYM2cOTz31FOPHjyc8PBxvb2/eeecd1qxZk+eci4207dWrF66urixYsAAXFxeysrK4++6781XTkCFDiI+P5/3336d69eq4uroSHh6eOzDD3d39sudfab+Dg8MFE2JfbHDEv1/Xld6PK10XYPDgwTz77LOsXr2aVatWUaNGDTp16nTF80REpGxatS+OF37YxoHYFACuq+3H670b4+pUtL//C6LMBTubzVag26FW+nfo+ueff6hTp05u/7OCWLlyJR06dODRRx/N3bZ///58nevk5MSQIUOYMWMGLi4u3HPPPfkKPmevO3nyZHr06AFAZGQkcXFxufubNm3K0aNH2bNnz0Vb7Zo2bcrixYvz3DY9n7+/P1FRUbk/JyYmcvDgwXzVdbn3w9vbm7CwMBYvXsyNN9540eeoXLkyvXv3ZsaMGaxevfqCW70iIlI+xCZl8MavO1mw6RgAfl6uvNSrIb2aBpeo/nVQBoNdaXLkyBHGjBnDww8/zMaNG/nwww8ZP378VT1XnTp1+Pzzz/n999+pUaMGX3zxBevWraNGjRr5On/48OE0aNAAIHcAQX6v+8UXX9C6dWsSExP5z3/+kycUdu7cmeuvv5677rqL9957j9q1a7Nr1y5sNhu33norY8eOpUmTJjz66KOMGDECFxcXlixZQt++ffHz86NLly7MnDmTXr16UaFCBV566aV8Bd/8vB+vvPIKI0aMICAgIHeAx8qVK3nsscfy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"},"metadata":{}}]},{"cell_type":"markdown","source":"# 3) Train the Model #\n\nHow would you interpret these training curves? Did this model improve upon the model from the tutorial?","metadata":{}},{"cell_type":"code","source":"# View the solution (Run this code cell to receive credit!)\nq_3.check()","metadata":{"lines_to_next_cell":0,"execution":{"iopub.status.busy":"2024-06-06T17:24:14.004719Z","iopub.execute_input":"2024-06-06T17:24:14.005445Z","iopub.status.idle":"2024-06-06T17:24:14.016433Z","shell.execute_reply.started":"2024-06-06T17:24:14.005404Z","shell.execute_reply":"2024-06-06T17:24:14.014779Z"},"trusted":true},"execution_count":8,"outputs":[{"output_type":"display_data","data":{"text/plain":"<IPython.core.display.Javascript object>","application/javascript":"parent.postMessage({\"jupyterEvent\": \"custom.exercise_interaction\", \"data\": {\"outcomeType\": 1, \"valueTowardsCompletion\": 0.3333333333333333, \"interactionType\": 1, \"questionType\": 4, \"questionId\": \"3_Q3\", \"learnToolsVersion\": \"0.3.4\", \"failureMessage\": \"\", \"exceptionClass\": \"\", \"trace\": \"\"}}, \"*\")"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"Correct: \n\n\nThe learning curves for the model from the tutorial diverged fairly rapidly. This would indicate that it was prone to overfitting and in need of some regularization. The additional layer in our new model would make it even more prone to overfitting. However, adding some regularization with the `Dropout` layer helped prevent this. These changes improved the validation accuracy of the model by several points.","text/markdown":"<span style=\"color:#33cc33\">Correct:</span> \n\n\nThe learning curves for the model from the tutorial diverged fairly rapidly. This would indicate that it was prone to overfitting and in need of some regularization. The additional layer in our new model would make it even more prone to overfitting. However, adding some regularization with the `Dropout` layer helped prevent this. These changes improved the validation accuracy of the model by several points.\n"},"metadata":{}}]},{"cell_type":"markdown","source":"# Conclusion #\n\nThese exercises showed you how to design a custom convolutional network to solve a specific classification problem. Though most models these days will be built on top of a pretrained base, it certain circumstances a smaller custom convnet might still be preferable -- such as with a smaller or unusual dataset or when computing resources are very limited. As you saw here, for certain problems they can perform just as well as a pretrained model.\n\n# Keep Going #\n\nContinue on to [**Lesson 6**](https://www.kaggle.com/ryanholbrook/data-augmentation), where you'll learn a widely-used technique that can give a boost to your training data: **data augmentation**.","metadata":{}},{"cell_type":"markdown","source":"---\n\n\n\n\n*Have questions or comments? Visit the [course discussion forum](https://www.kaggle.com/learn/computer-vision/discussion) to chat with other learners.*","metadata":{}}]}